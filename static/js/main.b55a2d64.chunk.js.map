{"version":3,"sources":["components/UI/Card.js","components/Expenses/ExpensesFilter.js","components/Expenses/ExpenseDate.js","components/Expenses/ExpenseItem.js","components/Expenses/ExpensesList.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/Expenses/ExpensesChart.js","components/Expenses/Expenses.js","components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpense.js","App.js","index.js"],"names":["Card","props","classes","className","children","ExpensesFilter","value","selected","onChange","event","onChangeFilter","target","ExpenseDate","month","date","toLocaleString","year","getFullYear","day","ExpenseItem","title","currency","amount","ExpenseList","items","length","map","expense","id","ChartBar","barFillHeight","maxValue","Math","round","style","height","label","Chart","dataPointValues","dataPoints","datapoint","totalMaximum","max","dataPoint","ExpensesChart","INRamount","chartDatapoints","expenses","getMonth","Expenses","useState","filteredYear","setFilteredYear","totalExpenses","filteredExpenses","filter","toString","wholeYearExpenses","selectedYear","toFixed","ExpenseForm","enteredTitle","setEnteredTitle","selectedCurrency","setSelectedCurrency","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","onSubmit","preventDefault","expenseData","Date","onSaveExpenseData","required","type","name","min","step","onClick","onCancel","NewExpense","isEditing","setIsEditing","enteredExpenseData","random","onAddExpense","DUMMY_EXPENSES","App","setExpenses","prevExpenses","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b55a2d64.chunk.js","sourcesContent":["import \"./Card.css\";\r\nconst Card = (props) => {\r\n  const classes = \"card \" + props.className;\r\n  return <div className={classes}>{props.children}</div>;\r\n};\r\n\r\nexport default Card;\r\n","import React from \"react\";\r\nimport \"./ExpensesFilter.css\";\r\n\r\nconst ExpensesFilter = (props) => {\r\n  const dropdownChangeHandler = (event) => {\r\n    props.onChangeFilter(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className=\"expenses-filter\">\r\n      <div className=\"expenses-filter__control\">\r\n        <label>Filter by year</label>\r\n        <select value={props.selected} onChange={dropdownChangeHandler}>\r\n          <option value=\"2022\">2022</option>\r\n          <option value=\"2021\">2021</option>\r\n          <option value=\"2020\">2020</option>\r\n          <option value=\"2019\">2019</option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpensesFilter;\r\n","import React from \"react\";\r\nimport \"./ExpenseDate.css\";\r\n\r\nconst ExpenseDate = (props) => {\r\n  const month = props.date.toLocaleString(\"en-US\", { month: \"long\" });\r\n  const year = props.date.getFullYear();\r\n  const day = props.date.toLocaleString(\"en-US\", { day: \"2-digit\" });\r\n  return (\r\n    <div className=\"expense-date\">\r\n      <div className=\"expense-date__month\">{month}</div>\r\n      <div className=\"expense-date__year\">{year}</div>\r\n      <div className=\"expense-date__day\">{day}</div>\r\n    </div>\r\n  );\r\n};\r\nexport default ExpenseDate;\r\n","import React from \"react\";\r\nimport ExpenseDate from \"./ExpenseDate\";\r\nimport \"./ExpenseItem.css\";\r\nimport Card from \"./../UI/Card\";\r\n\r\nconst ExpenseItem = (props) => {\r\n  return (\r\n    <li>\r\n      <Card className=\"expense-item\">\r\n        <ExpenseDate date={props.date} />\r\n\r\n        <div className=\"expense-item__description\">\r\n          <h2>{props.title}</h2>\r\n          <div className=\"expense-item__price\">\r\n            {props.currency}\r\n            {props.amount}\r\n          </div>\r\n        </div>\r\n      </Card>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default ExpenseItem;\r\n","import React from \"react\";\r\nimport ExpenseItem from \"./ExpenseItem\";\r\nimport \"./ExpensesList.css\";\r\n\r\nconst ExpenseList = (props) => {\r\n  if (props.items.length === 0) {\r\n    return <h2 className=\"expenses-list__fallback\">Found no expenses.</h2>;\r\n  }\r\n\r\n  return (\r\n    <ul className=\"expenses-list\">\r\n      {props.items.map((expense) => (\r\n        <ExpenseItem\r\n          key={expense.id}\r\n          title={expense.title}\r\n          amount={expense.amount}\r\n          currency={expense.currency}\r\n          date={expense.date}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default ExpenseList;\r\n","import React from \"react\";\r\nimport \"./ChartBar.css\";\r\n\r\nconst ChartBar = (props) => {\r\n  let barFillHeight = \"0%\";\r\n\r\n  if (props.maxValue > 0) {\r\n    barFillHeight = Math.round((props.value / props.maxValue) * 100) + \"%\";\r\n  }\r\n  return (\r\n    <div className=\"chart-bar\">\r\n      <div className=\"chart-bar__inner\">\r\n        <div\r\n          className=\"chart-bar__fill\"\r\n          style={{ height: barFillHeight }}\r\n        ></div>\r\n      </div>\r\n      <div className=\"chart-bar__label\">{props.label}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChartBar;\r\n","import React from \"react\";\r\nimport ChartBar from \"./ChartBar\";\r\nimport \"./Chart.css\";\r\n\r\nconst Chart = (props) => {\r\n  const dataPointValues = props.dataPoints.map((datapoint) => datapoint.value);\r\n  const totalMaximum = Math.max(...dataPointValues);\r\n\r\n  return (\r\n    <div className=\"chart\">\r\n      {props.dataPoints.map((dataPoint) => (\r\n        <ChartBar\r\n          key={dataPoint.label}\r\n          value={dataPoint.value}\r\n          maxValue={totalMaximum}\r\n          label={dataPoint.label}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chart;\r\n","import React from \"react\";\r\nimport Chart from \"./../Chart/Chart\";\r\nconst ExpensesChart = (props) => {\r\n  let INRamount = 0;\r\n  const chartDatapoints = [\r\n    { label: \"Jan\", value: 0 },\r\n    { label: \"Feb\", value: 0 },\r\n    { label: \"Mar\", value: 0 },\r\n    { label: \"Apr\", value: 0 },\r\n    { label: \"May\", value: 0 },\r\n    { label: \"Jun\", value: 0 },\r\n    { label: \"Jul\", value: 0 },\r\n    { label: \"Aug\", value: 0 },\r\n    { label: \"Sep\", value: 0 },\r\n    { label: \"Oct\", value: 0 },\r\n    { label: \"Nov\", value: 0 },\r\n    { label: \"Dec\", value: 0 },\r\n  ];\r\n\r\n  for (const expense of props.expenses) {\r\n    if (expense.currency === \"$\") {\r\n      INRamount = expense.amount * 75.09;\r\n    } else {\r\n      INRamount = expense.amount;\r\n    }\r\n    const expenseMonth = expense.date.getMonth();\r\n    chartDatapoints[expenseMonth].value += INRamount;\r\n  }\r\n\r\n  return <Chart dataPoints={chartDatapoints} />;\r\n};\r\n\r\nexport default ExpensesChart;\r\n","import React, { useState } from \"react\";\r\nimport \"./Expenses.css\";\r\nimport Card from \"./../UI/Card\";\r\nimport ExpensesFilter from \"./ExpensesFilter\";\r\nimport ExpenseList from \"./ExpensesList\";\r\nimport ExpensesChart from \"./ExpensesChart\";\r\n\r\nconst Expenses = (props) => {\r\n  const [filteredYear, setFilteredYear] = useState(\"2020\");\r\n  let totalExpenses = 0;\r\n\r\n  const filterChangeHandler = (selectedYear) => {\r\n    setFilteredYear(selectedYear);\r\n  };\r\n\r\n  const filteredExpenses = props.items.filter((expense) => {\r\n    return expense.date.getFullYear().toString() === filteredYear;\r\n  });\r\n\r\n  const wholeYearExpenses = (expense) => {\r\n    if (expense.currency === \"$\") {\r\n      totalExpenses += expense.amount * 75.09;\r\n    } else {\r\n      totalExpenses += expense.amount;\r\n    }\r\n  };\r\n\r\n  for (const expense of filteredExpenses) {\r\n    wholeYearExpenses(expense);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Card className=\"expenses\">\r\n        <ExpensesFilter\r\n          selected={filteredYear}\r\n          onChangeFilter={filterChangeHandler}\r\n        />\r\n        <h3 className=\"total-expenses\">\r\n          Total expense for {filteredYear} is $\r\n          {(totalExpenses / 75.09).toFixed(2)} (Rs.\r\n          {totalExpenses.toFixed(2)})\r\n        </h3>\r\n        <ExpensesChart expenses={filteredExpenses} />\r\n        <ExpenseList items={filteredExpenses} />\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\nexport default Expenses;\r\n","import React, { useState } from \"react\";\r\nimport \"./ExpenseForm.css\";\r\nconst ExpenseForm = (props) => {\r\n  const [enteredTitle, setEnteredTitle] = useState(\"\");\r\n  const [selectedCurrency, setSelectedCurrency] = useState(\"Rs.\");\r\n  const [enteredAmount, setEnteredAmount] = useState(\"\");\r\n  const [enteredDate, setEnteredDate] = useState(\"\");\r\n\r\n  const titleChangeHandler = (event) => {\r\n    setEnteredTitle(event.target.value);\r\n  };\r\n\r\n  const currencyChangeHandler = (event) => {\r\n    setSelectedCurrency(event.target.value);\r\n  };\r\n\r\n  const amountChangeHandler = (event) => {\r\n    setEnteredAmount(event.target.value);\r\n  };\r\n\r\n  const dateChangeHandler = (event) => {\r\n    setEnteredDate(event.target.value);\r\n  };\r\n\r\n  const submitHandler = (event) => {\r\n    event.preventDefault();\r\n    const expenseData = {\r\n      title: enteredTitle,\r\n      date: new Date(enteredDate),\r\n      currency: selectedCurrency,\r\n      amount: +enteredAmount,\r\n    };\r\n    props.onSaveExpenseData(expenseData);\r\n    setEnteredDate(\"\");\r\n    setEnteredTitle(\"\");\r\n    setEnteredAmount(\"\");\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={submitHandler}>\r\n      <div className=\"new-expense__controls\">\r\n        <div className=\"new-expense__control\">\r\n          <label>Title</label>\r\n          <input\r\n            required={true}\r\n            type=\"text\"\r\n            value={enteredTitle}\r\n            onChange={titleChangeHandler}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"new-expense__control\">\r\n          <label>Amount</label>\r\n          <select\r\n            className=\"new-expense__select\"\r\n            onChange={currencyChangeHandler}\r\n          >\r\n            <option name=\"ruppee\">Rs.</option>\r\n            <option name=\"dollar\">$</option>\r\n          </select>\r\n\r\n          <input\r\n            required={true}\r\n            type=\"number\"\r\n            min=\"0.01\"\r\n            step=\"0.01\"\r\n            value={enteredAmount}\r\n            onChange={amountChangeHandler}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"new-expense__control\">\r\n          <label>Date</label>\r\n          <input\r\n            required={true}\r\n            type=\"date\"\r\n            min=\"2019-01-01\"\r\n            max=\"2022-12-31\"\r\n            value={enteredDate}\r\n            onChange={dateChangeHandler}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className=\"new-expense__actions\">\r\n        <button type=\"button\" onClick={props.onCancel}>\r\n          Cancel\r\n        </button>\r\n        <button type=\"submit\">Add Expense</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ExpenseForm;\r\n","import React, { useState } from \"react\";\r\nimport ExpenseForm from \"./ExpenseForm\";\r\nimport \"./NewExpense.css\";\r\nconst NewExpense = (props) => {\r\n  const [isEditing, setIsEditing] = useState(false);\r\n  const saveExpenseDataHandler = (enteredExpenseData) => {\r\n    const expenseData = {\r\n      ...enteredExpenseData,\r\n      id: Math.random().toString(),\r\n    };\r\n    props.onAddExpense(expenseData);\r\n    setIsEditing(false);\r\n  };\r\n\r\n  const stopEditingHandler = () => {\r\n    setIsEditing(false);\r\n  };\r\n\r\n  const startEditingHandler = () => {\r\n    setIsEditing(true);\r\n  };\r\n  return (\r\n    <div className=\"new-expense\">\r\n      {!isEditing ? (\r\n        <button onClick={startEditingHandler}>Add New Expense</button>\r\n      ) : (\r\n        <ExpenseForm\r\n          onSaveExpenseData={saveExpenseDataHandler}\r\n          onCancel={stopEditingHandler}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewExpense;\r\n","import React, { useState } from \"react\";\nimport Expenses from \"./components/Expenses/Expenses\";\nimport NewExpense from \"./components/NewExpense/NewExpense\";\n\nconst DUMMY_EXPENSES = [\n  {\n    id: \"e1\",\n    title: \"Toilet Paper\",\n    amount: 94.12,\n    currency: \"$\",\n    date: new Date(2020, 7, 14),\n  },\n  {\n    id: \"e2\",\n    title: \"New TV\",\n    amount: 799.49,\n    currency: \"$\",\n    date: new Date(2021, 2, 12),\n  },\n  {\n    id: \"e3\",\n    title: \"Car Insurance\",\n    amount: 294.67,\n    currency: \"$\",\n    date: new Date(2021, 2, 28),\n  },\n  {\n    id: \"e4\",\n    title: \"New Desk (Wooden)\",\n    amount: 450,\n    currency: \"$\",\n    date: new Date(2021, 5, 12),\n  },\n];\n\nconst App = () => {\n  const [expenses, setExpenses] = useState(DUMMY_EXPENSES);\n\n  const addExpenseHandler = (expense) => {\n    setExpenses((prevExpenses) => {\n      return [expense, ...prevExpenses];\n    });\n  };\n\n  return (\n    <div>\n      <NewExpense onAddExpense={addExpenseHandler} />\n      <Expenses items={expenses} />\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}